version: '3.9'
services:
  sistema_concrete_nginx:
    container_name: sistema_concrete_nginx_container
    build:
      dockerfile: /Users/alexandre.s.ponte/Documents/treinamentodevops/docker/docker-compose/treinamentodevops/nginx-cluster/nginx/Dockerfile
      context: /Users/alexandre.s.ponte/Documents/treinamentodevops/docker/docker-compose/treinamentodevops/nginx-cluster/nginx
    image: nginx_alexandre
    ports:
      - "3000:80"
    depends_on:
      - sistema_concrete_java1
      - sistema_concrete_java2
      - sistema_concrete_java3
    networks:
      - concrete-network
  sistema_concrete_java1:
    container_name: goku1
    image: alexandreponte/validadorcpfjava
    networks:
      - concrete-network
  sistema_concrete_java2:
    container_name: goku2
    image: alexandreponte/validadorcpfjava
    networks:
      - concrete-network
  sistema_concrete_java3:
    container_name: goku3
    image: alexandreponte/validadorcpfjava
    networks:
      - concrete-network

networks:
  concrete-network:
    driver: bridge

# $ docker-compose build
# $ docker-compose up
# $ docker-compose up --detach # modo background
# $ docker-compose stop
# $ docker-compose ps
# $ docker exec -it sistema_concrete_nginx_container bash
# $ docker-compose down
# Como descobrir o IP do container
# $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sistema_concrete_nginx_container
# $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sistema_concrete_nginx_container_1
# $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sistema_concrete_nginx_container_2
# $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sistema_concrete_nginx_container_3